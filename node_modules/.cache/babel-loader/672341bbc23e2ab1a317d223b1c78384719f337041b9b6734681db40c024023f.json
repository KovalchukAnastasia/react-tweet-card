{"ast":null,"code":"var _jsxFileName = \"/Users/anastasiakovalchuk/Desktop/JS/react-tweet-card/src/components/TwitsCardList/TwitsCardList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getLocalStorage, setLocalStorage } from \"../../utils/localStorage\";\nimport { TwitsCard } from \"../TwitsCard/TwitsCard\";\nimport { List } from \"./TwitsCardsList.styled\";\nimport db from \"../../db/db.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TwitsCardList = () => {\n  _s();\n  const [users, setUsers] = useState(getLocalStorage(\"localStorageData\") || db);\n  //   const status = \"follow\";\n\n  useEffect(() => {\n    setLocalStorage(users, \"localStorageData\");\n  }, [users]);\n  const changeUserInfo = id => {\n    // for (const user of users) {\n    if (user.id === id) {\n      // console.log(user.followers);\n\n      const index = users.indexOf(user);\n      if (user.status === \"follow\") {\n        setUsers(prevState => {\n          console.log(prevState[index].followers);\n          prevState[index].followers += 1;\n          prevState[index].status = \"following\";\n          return [...prevState];\n        });\n      }\n      // if (user.status === \"following\")\n      else {\n        setUsers(prevState => {\n          prevState[index].followers -= 1;\n          prevState[index].status = \"follow\";\n          return [...prevState];\n        });\n      }\n    }\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(List, {\n    children: users.map(user => {\n      return /*#__PURE__*/_jsxDEV(TwitsCard, {\n        user: user,\n        changeUserInfo: changeUserInfo,\n        status: user.status\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(TwitsCardList, \"OyEjdrtpMRTb8h0oVAqWi9qyOa8=\");\n_c = TwitsCardList;\nvar _c;\n$RefreshReg$(_c, \"TwitsCardList\");","map":{"version":3,"names":["React","useState","useEffect","getLocalStorage","setLocalStorage","TwitsCard","List","db","jsxDEV","_jsxDEV","TwitsCardList","_s","users","setUsers","changeUserInfo","id","user","index","indexOf","status","prevState","console","log","followers","children","map","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/anastasiakovalchuk/Desktop/JS/react-tweet-card/src/components/TwitsCardList/TwitsCardList.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { getLocalStorage, setLocalStorage } from \"../../utils/localStorage\";\nimport { TwitsCard } from \"../TwitsCard/TwitsCard\";\nimport { List } from \"./TwitsCardsList.styled\";\nimport db from \"../../db/db.json\";\n\nexport const TwitsCardList = () => {\n  const [users, setUsers] = useState(getLocalStorage(\"localStorageData\") || db);\n  //   const status = \"follow\";\n\n  useEffect(() => {\n    setLocalStorage(users, \"localStorageData\");\n  }, [users]);\n\n  const changeUserInfo = (id) => {\n    // for (const user of users) {\n    if (user.id === id) {\n      // console.log(user.followers);\n\n      const index = users.indexOf(user);\n      if (user.status === \"follow\") {\n        setUsers((prevState) => {\n          console.log(prevState[index].followers);\n          prevState[index].followers += 1;\n          prevState[index].status = \"following\";\n          return [...prevState];\n        });\n      }\n      // if (user.status === \"following\")\n      else {\n        setUsers((prevState) => {\n          prevState[index].followers -= 1;\n          prevState[index].status = \"follow\";\n          return [...prevState];\n        });\n      }\n    }\n    // }\n  };\n  return (\n    <List>\n      {users.map((user) => {\n        return (\n          <TwitsCard\n            key={user.id}\n            user={user}\n            changeUserInfo={changeUserInfo}\n            status={user.status}\n          />\n        );\n      })}\n    </List>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,eAAe,EAAEC,eAAe,QAAQ,0BAA0B;AAC3E,SAASC,SAAS,QAAQ,wBAAwB;AAClD,SAASC,IAAI,QAAQ,yBAAyB;AAC9C,OAAOC,EAAE,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAACE,eAAe,CAAC,kBAAkB,CAAC,IAAII,EAAE,CAAC;EAC7E;;EAEAL,SAAS,CAAC,MAAM;IACdE,eAAe,CAACQ,KAAK,EAAE,kBAAkB,CAAC;EAC5C,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAME,cAAc,GAAIC,EAAE,IAAK;IAC7B;IACA,IAAIC,IAAI,CAACD,EAAE,KAAKA,EAAE,EAAE;MAClB;;MAEA,MAAME,KAAK,GAAGL,KAAK,CAACM,OAAO,CAACF,IAAI,CAAC;MACjC,IAAIA,IAAI,CAACG,MAAM,KAAK,QAAQ,EAAE;QAC5BN,QAAQ,CAAEO,SAAS,IAAK;UACtBC,OAAO,CAACC,GAAG,CAACF,SAAS,CAACH,KAAK,CAAC,CAACM,SAAS,CAAC;UACvCH,SAAS,CAACH,KAAK,CAAC,CAACM,SAAS,IAAI,CAAC;UAC/BH,SAAS,CAACH,KAAK,CAAC,CAACE,MAAM,GAAG,WAAW;UACrC,OAAO,CAAC,GAAGC,SAAS,CAAC;QACvB,CAAC,CAAC;MACJ;MACA;MAAA,KACK;QACHP,QAAQ,CAAEO,SAAS,IAAK;UACtBA,SAAS,CAACH,KAAK,CAAC,CAACM,SAAS,IAAI,CAAC;UAC/BH,SAAS,CAACH,KAAK,CAAC,CAACE,MAAM,GAAG,QAAQ;UAClC,OAAO,CAAC,GAAGC,SAAS,CAAC;QACvB,CAAC,CAAC;MACJ;IACF;IACA;EACF,CAAC;;EACD,oBACEX,OAAA,CAACH,IAAI;IAAAkB,QAAA,EACFZ,KAAK,CAACa,GAAG,CAAET,IAAI,IAAK;MACnB,oBACEP,OAAA,CAACJ,SAAS;QAERW,IAAI,EAAEA,IAAK;QACXF,cAAc,EAAEA,cAAe;QAC/BK,MAAM,EAAEH,IAAI,CAACG;MAAO,GAHfH,IAAI,CAACD,EAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAIZ;IAEN,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAEX,CAAC;AAAClB,EAAA,CA/CWD,aAAa;AAAAoB,EAAA,GAAbpB,aAAa;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}